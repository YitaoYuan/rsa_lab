# RSA加解密程序

代码在

## 生成密钥

使用`python3 rsa.py -g <bit length>`将生成对应位的密钥，注意参数声明的是公钥中n的二进制位数。

下面展示样例运行结果：

```
root@87b384f8bd36:~/rsa$ python3 rsa.py -g 256
Public key:
n = 94397674717669316025003762049892701875917286189617860295950438836259308431951
e = 91824203861005998459957829571081158155675402519503044289951205561927807061069
Private key:
p = 313498500412207730398185036544145824057
q = 301110450587640006536228508676581017543
d = 20424560094339901034410015814619831806548188083424040930644799787908688158021
```

```
root@87b384f8bd36:~/rsa$ python3 rsa.py -g 32
Public key:
n = 3516316123
e = 1883185283
Private key:
p = 54163
q = 64921
d = 474853307
```

## 加密和解密

使用`python3 rsa.py {-e|-d} <int> -n <int> <int, plaintext or ciphertext>`进行加密和解密，`-e`，`-d`和`-n`分别表示公私钥中的参数e，d，n，最后一个参数表示需要加解密的数据。

例如，使用上面第二个样例进行加密：

```
root@87b384f8bd36:~/rsa$ python3 rsa.py -e 1883185283 -n 3516316123 123456789
581301603
```

解密：

```
root@87b384f8bd36:~/rsa$ python3 rsa.py -d 474853307 -n 3516316123 581301603
123456789
```

注意，$123456789^{1883185283}\ mod\  3516316123 \neq 581301603$，这是因为我支持加密长度超过n的数据，我会先将数据表示为n-1进制，按位分组，再将每组+1(此操作后每组中的数字范围为[1, n-1])，然后分组加密，加密后将每组-1(此操作后每组中的数字范围为[0, n-2])，然后按n-1进制拼接并输出。所以事实上是$[(123456789+1)^{1883185283}\ mod\  3516316123]-1 = 581301603$

因此，我们可以加解密比n更长的数据：

```
root@87b384f8bd36:~/rsa$ python3 rsa.py -e 1883185283 -n 3516316123 12345678987654321
1588893409509429805
root@87b384f8bd36:~/rsa$ python3 rsa.py -d 474853307 -n 3516316123 1588893409509429805
12345678987654321
```

## 附：使用第一个大样例进行加解密

```
root@87b384f8bd36:~/rsa$ python3 rsa.py -e 91824203861005998459957829571081158155675402519503044289951205561927807061069 -n 94397674717669316025003762049892701875917286189617860295950438836259308431951 1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
5144578338432424179059516385320494921862881931776537860647530742042106226088269021467223637952073485417022158911407904266771221784166841146409328544182983
root@87b384f8bd36:~/rsa$ python3 rsa.py -d 20424560094339901034410015814619831806548188083424040930644799787908688158021 -n 94397674717669316025003762049892701875917286189617860295950438836259308431951 5144578338432424179059516385320494921862881931776537860647530742042106226088269021467223637952073485417022158911407904266771221784166841146409328544182983
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
```